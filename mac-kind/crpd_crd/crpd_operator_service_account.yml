---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: crpd-account
rules:
# Allow kured to read spec.unschedulable
# Allow kubectl to drain/uncordon
#
# NB: These permissions are tightly coupled to the bundled version of kubectl; the ones below
# match https://github.com/kubernetes/kubernetes/blob/v1.18.8/staging/src/k8s.io/kubectl/pkg/cmd/drain/drain.go
#
- apiGroups: [""]
  resources: ["nodes"]
  verbs:     ["get", "patch"]
- apiGroups: [""]
  resources: ["pods"]
  verbs:     ["list","delete","get"]
- apiGroups: ["apps"]
  resources: ["daemonsets"]
  verbs:     ["get"]
- apiGroups: [""]
  resources: ["pods/eviction"]
  verbs:     ["create"]
- apiGroups: [junos.config]
  resources: [clusterkopfpeerings]
  verbs: [list, watch, patch, get]
- apiGroups: [apiextensions.k8s.io]
  resources: [customresourcedefinitions]
  verbs: [list, get]

# Application: read-only access for watching cluster-wide.
- apiGroups: [junos.config]
  resources: [crpds]
  verbs: [list, watch]

---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: crpd-account
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: crpd-account
subjects:
- kind: ServiceAccount
  name: crpd-account
  namespace: kube-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  namespace: kube-system
  name: crpd-account
rules:
# Allow kured to lock/unlock itself
- apiGroups:     ["apps"]
  resources:     ["daemonsets"]
  verbs:         ["get", "list", "watch", "create", "update", "patch", "delete"]
- apiGroups: [junos.config]
  resources: [kopfpeerings]
  verbs: [list, watch, patch, get]

# Framework: posting the events about the handlers progress/errors.
- apiGroups: [events.k8s.io]
  resources: [events]
  verbs: [create]
- apiGroups: [""]
  resources: [events]
  verbs: [create]

# Application: watching & handling for the custom resource we declare.
- apiGroups: [junos.config]
  resources: [crpds]
  verbs: [list, watch, patch]

# Application: other resources it produces and manipulates.
# Here, we create Jobs+PVCs+Pods, but we do not patch/update/delete them ever.
- apiGroups: [batch, extensions]
  resources: [jobs]
  verbs: [create]
- apiGroups: [""]
  resources: [pods, persistentvolumeclaims]
  verbs: [create]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  namespace: kube-system
  name: crpd-account
subjects:
- kind: ServiceAccount
  namespace: kube-system
  name: crpd-account
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: crpd-account
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: crpd-account
  namespace: kube-system

